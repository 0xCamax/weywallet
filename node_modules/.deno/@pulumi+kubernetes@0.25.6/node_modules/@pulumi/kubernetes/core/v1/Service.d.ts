import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "../../types/input";
import * as outputApi from "../../types/output";
/**
 * Service is a named abstraction of software service (for example, mysql) consisting of local
 * port (for example 3306) that the proxy listens on, and the selector that determines which
 * pods will answer requests sent through the proxy.
 */
export declare class Service extends pulumi.CustomResource {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should
     * convert recognized schemas to the latest internal value, and may reject unrecognized
     * values. More info:
     * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     */
    readonly apiVersion: pulumi.Output<"v1">;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may
     * infer this from the endpoint the client submits requests to. Cannot be updated. In
     * CamelCase. More info:
     * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     */
    readonly kind: pulumi.Output<"Service">;
    /**
     * Standard object's metadata. More info:
     * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
     */
    readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;
    /**
     * Spec defines the behavior of a service.
     * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
     */
    readonly spec: pulumi.Output<outputApi.core.v1.ServiceSpec>;
    /**
     * Most recently observed status of the service. Populated by the system. Read-only. More
     * info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
     */
    readonly status: pulumi.Output<outputApi.core.v1.ServiceStatus>;
    /**
     * Get the state of an existing `Service` resource, as identified by `id`.
     * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
     * Kubernetes convention) the ID becomes default/<name>.
     *
     * Pulumi will keep track of this resource using `name` as the Pulumi ID.
     *
     * @param name _Unique_ name used to register this resource with Pulumi.
     * @param id An ID for the Kubernetes resource to retrieve. Takes the form
     *  <namespace>/<name> or <name>.
     * @param opts Uniquely specifies a CustomResource to select.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Service;
    /**
     * Returns true if the given object is an instance of Service.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Service;
    /**
     * Create a core.v1.Service resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: inputApi.core.v1.Service, opts?: pulumi.CustomResourceOptions);
}
